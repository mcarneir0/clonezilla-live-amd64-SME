#
set pref=/boot/grub
set default="0"
set timeout="30"
# For grub 2.04, a workaround to avoid boot failure is to add "rmmod tpm": https://bugs.debian.org/975835. However, it might fail in secure boot uEFI machine, and the error is like:
# error: verification requested but nobody cares: /live/vmlinuz.
# Out of range pointer 0x3000000004040
# Aborted. Press any key to exit. 
# rmmod tpm

# To set authentication, check
# https://www.gnu.org/software/grub/manual/grub/grub.html#Authentication-and-authorisation
# ‘password’ sets the password in plain text, requiring grub.cfg to be secure; ‘password_pbkdf2’ sets the password hashed using the Password-Based Key Derivation Function (RFC 2898), requiring the use of grub-mkpasswd-pbkdf2 (see Invoking grub-mkpasswd-pbkdf2) to generate password hashes.
# Example:
# set superusers="root"
# password_pbkdf2 root grub.pbkdf2.sha512.10000.biglongstring
# password user1 insecure
# 
# menuentry "May be run by any user" --unrestricted {
# 	set root=(hd0,1)
# 	linux /vmlinuz
# }
# 
# menuentry "Superusers only" --users "" {
# 	set root=(hd0,1)
# 	linux /vmlinuz single
# }
# 
# menuentry "May be run by user1 or a superuser" --users user1 {
# 	set root=(hd0,2)
# 	chainloader +1
# }

# Load graphics (only correspoonding ones will be found)
# (U)EFI
insmod efi_gop
insmod efi_uga
# legacy BIOS
# insmod vbe
if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
   font=$prefix/unifont.pf2
fi

if loadfont $font; then
  set gfxmode=1280x720
  insmod gfxterm
  # Set the language for boot menu prompt, e.g., en_US, zh_TW...
  set lang=pt_BR
  terminal_output gfxterm
fi
set hidden_timeout_quiet=false

insmod png
if background_image $pref/ocswp-grub2.png; then
  set color_normal=black/black
  set color_highlight=magenta/black
else
  set color_normal=cyan/blue
  set color_highlight=white/blue
fi

# Uncomment the following for serial console
# The command serial initializes the serial unit 0 with the speed 38400bps.
# The serial unit 0 is usually called ‘COM1’. If COM2, use ‘--unit=1’ instead.
#serial --unit=0 --speed=38400
#terminal_input serial
#terminal_output serial

# Decide if the commands: linux/initrd (default) or linuxefi/initrdefi
set linux_cmd=linux
set initrd_cmd=initrd
export linux_cmd initrd_cmd
# Since "linux/initrd" works for uEFI boot, no matter it's secure boot or not. Just use them.
# if [ "${grub_platform}" = "efi" -a -e "/amd64-release.txt" ]; then
#   # Only amd64 release we switch to linuxefi/initrdefi since it works better with security boot (shim)
#   set linux_cmd=linuxefi
#   set initrd_cmd=initrdefi
# fi

insmod play
play 960 440 1 0 4 440 1

menuentry --hotkey=b "BAIXAR IMAGEM" --id live-restore-disk-ram-large-font {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components quiet loglevel=0 noswap edd=on nomodeset enforcing=0 noeject locales=pt_BR.UTF-8 keyboard-layouts=br ocs_live_run="ocs-sr -g auto -e1 auto -e2 -c -r -j2 -k0 -scr -p reboot restoredisk ask_user ask_user" ocs_live_extra_param="" ocs_live_batch="no" nomodeset toram=live,syslinux,EFI,boot,.disk,utils net.ifnames=0  nosplash live_console_font_size=12x24 ocs_repository="ssh://atendimento@172.23.7.185/img/" ocs_prerun="sudo dhclient"
  $initrd_cmd /live/initrd.img
}

menuentry --hotkey=s "SUBIR IMAGEM" --id live-save-disk-ram-large-font {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components quiet loglevel=0 noswap edd=on nomodeset enforcing=0 noeject locales=pt_BR.UTF-8 keyboard-layouts=br ocs_live_run="ocs-sr -q2 -c -j2 -rm-win-swap-hib -z9p -i 0 -sfsck -scs -senc -p reboot savedisk ask_user ask_user" ocs_live_extra_param="" ocs_live_batch="no" nomodeset toram=live,syslinux,EFI,boot,.disk,utils net.ifnames=0  nosplash live_console_font_size=12x24 ocs_repository="ssh://atendimento@172.23.7.185/img/" ocs_prerun="sudo dhclient"
  $initrd_cmd /live/initrd.img
}

menuentry --hotkey=l "IMAGEM LOCAL" --id live-restore-disk-local-ram-large-font {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components quiet loglevel=0 noswap edd=on nomodeset enforcing=0 noeject locales=pt_BR.UTF-8 keyboard-layouts=br ocs_live_run="ocs-sr -g auto -e1 auto -e2 -c -r -j2 -k0 -scr -p reboot restoredisk ask_user ask_user" ocs_live_extra_param="" ocs_live_batch="no" nomodeset toram=live,syslinux,EFI,boot,.disk,utils net.ifnames=0  nosplash live_console_font_size=12x24 ocs_repository="dev:///LABEL=Ventoy"
  $initrd_cmd /live/initrd.img
}

menuentry --hotkey=m "MULTIPLOS DISCOS - REDE" --id live-restore-mdisks-net-ram-large-font {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components quiet loglevel=0 noswap edd=on nomodeset enforcing=0 noeject locales=pt_BR.UTF-8 keyboard-layouts=br ocs_live_run="ocs-restore-mdisks -a reboot -p '-g auto -e1 auto -e2 -c -r -j2 -k0 -scr -p true' ask_user ask_user" ocs_live_extra_param="" ocs_live_batch="no" nomodeset toram=live,syslinux,EFI,boot,.disk,utils net.ifnames=0  nosplash live_console_font_size=12x24 ocs_repository="ssh://atendimento@172.23.7.185/img/" ocs_prerun="sudo dhclient"
  $initrd_cmd /live/initrd.img
}

menuentry --hotkey=n "MULTIPLOS DISCOS - LOCAL" --id live-restore-mdisks-local-ram-large-font {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components quiet loglevel=0 noswap edd=on nomodeset enforcing=0 noeject locales=pt_BR.UTF-8 keyboard-layouts=br ocs_live_run="ocs-restore-mdisks -a reboot -p '-g auto -e1 auto -e2 -c -r -j2 -k0 -scr -p true' ask_user ask_user" ocs_live_extra_param="" ocs_live_batch="no" nomodeset toram=live,syslinux,EFI,boot,.disk,utils net.ifnames=0  nosplash live_console_font_size=12x24 ocs_repository="dev:///LABEL=Ventoy"
  $initrd_cmd /live/initrd.img
}

menuentry --hotkey=c "Clonezilla padrao" --id live-toram {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components quiet loglevel=0 noswap edd=on nomodeset enforcing=0 noeject locales=pt_BR.UTF-8 keyboard-layouts=br ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 toram=live,syslinux,EFI,boot,.disk,utils net.ifnames=0  nosplash i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1
  $initrd_cmd /live/initrd.img
}

menuentry "Clonezilla live 3.1.2-22-amd64-SME-1 info"{
  echo Clonezilla, the OpenSource Clone System.
  echo NCHC Free Software Labs, Taiwan.
  echo clonezilla.org, clonezilla.nchc.org.tw
  echo \* Boot menu for EFI machine
  echo \* Clonezilla live version: 3.1.2-22-amd64-SME-1. (C) 2003-2024, NCHC, Taiwan
  echo \* Disclaimer: Clonezilla comes with ABSOLUTELY NO WARRANTY
  echo \* Maintainer: Matheus Carneiro - @m.carneir0
  sleep --verbose --interruptible 10
}
